/*
 * Homework server
 * This is a simple server for my homework. It can make request towards a PSQL database, and get full tables of data from it.
 *
 * OpenAPI spec version: 2.0.0
 * Contact: szmgepesz@gmail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.12
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.HomeworkServer);
  }
}(this, function(expect, HomeworkServer) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('DataPoint', function() {
      beforeEach(function() {
        instance = new HomeworkServer.DataPoint();
      });

      it('should create an instance of DataPoint', function() {
        // TODO: update the code to test DataPoint
        expect(instance).to.be.a(HomeworkServer.DataPoint);
      });

      it('should have the property ID (base name: "ID")', function() {
        // TODO: update the code to test the property ID
        expect(instance).to.have.property('ID');
        // expect(instance.ID).to.be(expectedValueLiteral);
      });

      it('should have the property timestamp (base name: "Timestamp")', function() {
        // TODO: update the code to test the property timestamp
        expect(instance).to.have.property('timestamp');
        // expect(instance.timestamp).to.be(expectedValueLiteral);
      });

      it('should have the property dataPointDescription (base name: "DataPointDescription")', function() {
        // TODO: update the code to test the property dataPointDescription
        expect(instance).to.have.property('dataPointDescription');
        // expect(instance.dataPointDescription).to.be(expectedValueLiteral);
      });

      it('should have the property module (base name: "Module")', function() {
        // TODO: update the code to test the property module
        expect(instance).to.have.property('module');
        // expect(instance.module).to.be(expectedValueLiteral);
      });

      it('should have the property value (base name: "Value")', function() {
        // TODO: update the code to test the property value
        expect(instance).to.have.property('value');
        // expect(instance.value).to.be(expectedValueLiteral);
      });

    });
  });

}));
