/*
 * Homework server
 * This is a simple server for my homework. It can make request towards a PSQL database, and get full tables of data from it.
 *
 * OpenAPI spec version: 2.0.0
 * Contact: szmgepesz@gmail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.12
 *
 * Do not edit the class manually.
 *
 */

(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/DataPoint', 'model/DataPointDescription', 'model/Module', 'api/SQLWebHandlerApi'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('./ApiClient'), require('./model/DataPoint'), require('./model/DataPointDescription'), require('./model/Module'), require('./api/SQLWebHandlerApi'));
  }
}(function(ApiClient, DataPoint, DataPointDescription, Module, SQLWebHandlerApi) {
  'use strict';

  /**
   * This_is_a_simple_server_for_my_homework__It_can_make_request_towards_a_PSQL_database_and_get_full_tables_of_data_from_it_.<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var HomeworkServer = require('index'); // See note below*.
   * var xxxSvc = new HomeworkServer.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new HomeworkServer.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new HomeworkServer.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new HomeworkServer.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module index
   * @version 2.0.0
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The DataPoint model constructor.
     * @property {module:model/DataPoint}
     */
    DataPoint: DataPoint,
    /**
     * The DataPointDescription model constructor.
     * @property {module:model/DataPointDescription}
     */
    DataPointDescription: DataPointDescription,
    /**
     * The Module model constructor.
     * @property {module:model/Module}
     */
    Module: Module,
    /**
     * The SQLWebHandlerApi service constructor.
     * @property {module:api/SQLWebHandlerApi}
     */
    SQLWebHandlerApi: SQLWebHandlerApi
  };

  return exports;
}));
