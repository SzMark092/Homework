/* 
 * Homework server
 *
 * This is a simple server for my homework. It can make request towards a PSQL database, and get full tables of data from it.
 *
 * OpenAPI spec version: 2.0.0
 * Contact: szmgepesz@gmail.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing SQLWebHandlerApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class SQLWebHandlerApiTests
    {
        private SQLWebHandlerApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new SQLWebHandlerApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of SQLWebHandlerApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' SQLWebHandlerApi
            //Assert.IsInstanceOfType(typeof(SQLWebHandlerApi), instance, "instance is a SQLWebHandlerApi");
        }

        
        /// <summary>
        /// Test CreateTable
        /// </summary>
        [Test]
        public void CreateTableTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? tableType = null;
            //instance.CreateTable(tableType);
            
        }
        
        /// <summary>
        /// Test GetDataPointDescriptionTable
        /// </summary>
        [Test]
        public void GetDataPointDescriptionTableTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetDataPointDescriptionTable();
            //Assert.IsInstanceOf<List<DataPointDescription>> (response, "response is List<DataPointDescription>");
        }
        
        /// <summary>
        /// Test GetDataPointTable
        /// </summary>
        [Test]
        public void GetDataPointTableTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? tableType = null;
            //var response = instance.GetDataPointTable(tableType);
            //Assert.IsInstanceOf<List<DataPoint>> (response, "response is List<DataPoint>");
        }
        
        /// <summary>
        /// Test GetModule
        /// </summary>
        [Test]
        public void GetModuleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetModule();
            //Assert.IsInstanceOf<List<Module>> (response, "response is List<Module>");
        }
        
    }

}
